var searchIndex = {};
searchIndex['glutin'] = {"items":[[0,"","glutin","The purpose of this library is to provide an OpenGL context on as many\n platforms as possible."],[3,"MonitorID","","Identifier for a monitor."],[3,"WindowBuilder","","Object that allows you to build windows."],[3,"HeadlessRendererBuilder","","Object that allows you to build headless contexts."],[3,"Window","","Represents an OpenGL context and the Window or environment around it."],[3,"WindowProxy","","Represents a thread safe subset of operations that can be called\non a window. This structure can be safely cloned and sent between\nthreads.\n"],[3,"HeadlessContext","","Represents a headless OpenGL context."],[3,"PollEventsIterator","","An iterator for the `poll_events` function."],[3,"WaitEventsIterator","","An iterator for the `wait_events` function."],[3,"AvailableMonitorsIter","","An iterator for the list of available monitors."],[4,"Event","",""],[13,"Resized","","The size of the window has changed.",0],[13,"Moved","","The position of the window has changed.",0],[13,"Closed","","The window has been closed.",0],[13,"ReceivedCharacter","","The window received a unicode character.",0],[13,"Focused","","The window gained or lost focus.",0],[13,"KeyboardInput","","An event from the keyboard has been received.",0],[13,"MouseMoved","","The cursor has moved on the window.",0],[13,"MouseWheel","","A positive value indicates that the wheel was rotated forward, away from the user;\na negative value indicates that the wheel was rotated backward, toward the user.",0],[13,"MouseInput","","An event from the mouse has been received.",0],[13,"Awakened","","The event loop was woken up by another thread.",0],[4,"ElementState","",""],[13,"Pressed","","",1],[13,"Released","","",1],[4,"MouseButton","",""],[13,"Left","","",2],[13,"Right","","",2],[13,"Middle","","",2],[13,"Other","","",2],[4,"VirtualKeyCode","",""],[13,"Key1","","The '1' key over the letters.",3],[13,"Key2","","The '2' key over the letters.",3],[13,"Key3","","The '3' key over the letters.",3],[13,"Key4","","The '4' key over the letters.",3],[13,"Key5","","The '5' key over the letters.",3],[13,"Key6","","The '6' key over the letters.",3],[13,"Key7","","The '7' key over the letters.",3],[13,"Key8","","The '8' key over the letters.",3],[13,"Key9","","The '9' key over the letters.",3],[13,"Key0","","The '0' key over the 'O' and 'P' keys.",3],[13,"A","","",3],[13,"B","","",3],[13,"C","","",3],[13,"D","","",3],[13,"E","","",3],[13,"F","","",3],[13,"G","","",3],[13,"H","","",3],[13,"I","","",3],[13,"J","","",3],[13,"K","","",3],[13,"L","","",3],[13,"M","","",3],[13,"N","","",3],[13,"O","","",3],[13,"P","","",3],[13,"Q","","",3],[13,"R","","",3],[13,"S","","",3],[13,"T","","",3],[13,"U","","",3],[13,"V","","",3],[13,"W","","",3],[13,"X","","",3],[13,"Y","","",3],[13,"Z","","",3],[13,"Escape","","The Escape key, next to F1.",3],[13,"F1","","",3],[13,"F2","","",3],[13,"F3","","",3],[13,"F4","","",3],[13,"F5","","",3],[13,"F6","","",3],[13,"F7","","",3],[13,"F8","","",3],[13,"F9","","",3],[13,"F10","","",3],[13,"F11","","",3],[13,"F12","","",3],[13,"F13","","",3],[13,"F14","","",3],[13,"F15","","",3],[13,"Snapshot","","Print Screen/SysRq.",3],[13,"Scroll","","Scroll Lock.",3],[13,"Pause","","Pause/Break key, next to Scroll lock.",3],[13,"Insert","","`Insert`, next to Backspace.",3],[13,"Home","","",3],[13,"Delete","","",3],[13,"End","","",3],[13,"PageDown","","",3],[13,"PageUp","","",3],[13,"Left","","",3],[13,"Up","","",3],[13,"Right","","",3],[13,"Down","","",3],[13,"Back","","The Backspace key, right over Enter.",3],[13,"Return","","The Enter key.",3],[13,"Space","","The space bar.",3],[13,"Numlock","","",3],[13,"Numpad0","","",3],[13,"Numpad1","","",3],[13,"Numpad2","","",3],[13,"Numpad3","","",3],[13,"Numpad4","","",3],[13,"Numpad5","","",3],[13,"Numpad6","","",3],[13,"Numpad7","","",3],[13,"Numpad8","","",3],[13,"Numpad9","","",3],[13,"AbntC1","","",3],[13,"AbntC2","","",3],[13,"Add","","",3],[13,"Apostrophe","","",3],[13,"Apps","","",3],[13,"At","","",3],[13,"Ax","","",3],[13,"Backslash","","",3],[13,"Calculator","","",3],[13,"Capital","","",3],[13,"Colon","","",3],[13,"Comma","","",3],[13,"Convert","","",3],[13,"Decimal","","",3],[13,"Divide","","",3],[13,"Equals","","",3],[13,"Grave","","",3],[13,"Kana","","",3],[13,"Kanji","","",3],[13,"LAlt","","",3],[13,"LBracket","","",3],[13,"LControl","","",3],[13,"LMenu","","",3],[13,"LShift","","",3],[13,"LWin","","",3],[13,"Mail","","",3],[13,"MediaSelect","","",3],[13,"MediaStop","","",3],[13,"Minus","","",3],[13,"Multiply","","",3],[13,"Mute","","",3],[13,"MyComputer","","",3],[13,"NextTrack","","",3],[13,"NoConvert","","",3],[13,"NumpadComma","","",3],[13,"NumpadEnter","","",3],[13,"NumpadEquals","","",3],[13,"OEM102","","",3],[13,"Period","","",3],[13,"Playpause","","",3],[13,"Power","","",3],[13,"Prevtrack","","",3],[13,"RAlt","","",3],[13,"RBracket","","",3],[13,"RControl","","",3],[13,"RMenu","","",3],[13,"RShift","","",3],[13,"RWin","","",3],[13,"Semicolon","","",3],[13,"Slash","","",3],[13,"Sleep","","",3],[13,"Stop","","",3],[13,"Subtract","","",3],[13,"Sysrq","","",3],[13,"Tab","","",3],[13,"Underline","","",3],[13,"Unlabeled","","",3],[13,"VolumeDown","","",3],[13,"VolumeUp","","",3],[13,"Wake","","",3],[13,"Webback","","",3],[13,"WebFavorites","","",3],[13,"WebForward","","",3],[13,"WebHome","","",3],[13,"WebRefresh","","",3],[13,"WebSearch","","",3],[13,"WebStop","","",3],[13,"Yen","","",3],[4,"CreationError","","Error that can happen while creating a window or a headless renderer."],[13,"OsError","","",4],[13,"NotSupported","","",4],[4,"Api","","All APIs related to OpenGL that you can possibly get while using glutin."],[13,"OpenGl","","The classical OpenGL. Available on Windows, Linux, OS/X.",5],[13,"OpenGlEs","","OpenGL embedded system. Available on Linux, Android.",5],[13,"WebGl","","OpenGL for the web. Very similar to OpenGL ES.",5],[4,"MouseCursor","",""],[13,"Default","","The platform-dependent default cursor.",6],[13,"Crosshair","","A simple crosshair.",6],[13,"Hand","","A hand (often used to indicate links in web browsers).",6],[13,"Arrow","","Self explanatory.",6],[13,"Move","","Indicates something is to be moved.",6],[13,"Text","","Indicates text that may be selected or edited.",6],[13,"Wait","","Program busy indicator.",6],[13,"Help","","Help indicator (often rendered as a \"?\")",6],[13,"Progress","","Progress indicator. Shows that processing is being done. But in contrast\nwith \"Wait\" the user may still interact with the program. Often rendered\nas a spinning beach ball, or an arrow with a watch or hourglass.",6],[13,"NotAllowed","","Cursor showing that something cannot be done.",6],[13,"ContextMenu","","",6],[13,"NoneCursor","","",6],[13,"Cell","","",6],[13,"VerticalText","","",6],[13,"Alias","","",6],[13,"Copy","","",6],[13,"NoDrop","","",6],[13,"Grab","","",6],[13,"Grabbing","","",6],[13,"AllScroll","","",6],[13,"ZoomIn","","",6],[13,"ZoomOut","","",6],[13,"EResize","","Indicate that some edge is to be moved. For example, the 'SeResize' cursor\nis used when the movement starts from the south-east corner of the box.",6],[13,"NResize","","",6],[13,"NeResize","","",6],[13,"NwResize","","",6],[13,"SResize","","",6],[13,"SeResize","","",6],[13,"SwResize","","",6],[13,"WResize","","",6],[13,"EwResize","","",6],[13,"NsResize","","",6],[13,"NeswResize","","",6],[13,"NwseResize","","",6],[13,"ColResize","","",6],[13,"RowResize","","",6],[5,"get_available_monitors","","Returns the list of all available monitors."],[5,"get_primary_monitor","","Returns the primary monitor of the system."],[11,"fmt","","",0],[11,"clone","","",0],[11,"clone","","",1],[11,"eq","","",1],[11,"ne","","",1],[11,"hash","","",1],[11,"fmt","","",1],[11,"clone","","",2],[11,"eq","","",2],[11,"ne","","",2],[11,"hash","","",2],[11,"fmt","","",2],[11,"clone","","",3],[11,"eq","","",3],[11,"ne","","",3],[11,"hash","","",3],[11,"fmt","","",3],[6,"ScanCode","",""],[11,"fmt","","",0],[11,"clone","","",0],[11,"clone","","",1],[11,"eq","","",1],[11,"ne","","",1],[11,"hash","","",1],[11,"fmt","","",1],[11,"clone","","",2],[11,"eq","","",2],[11,"ne","","",2],[11,"hash","","",2],[11,"fmt","","",2],[11,"clone","","",3],[11,"eq","","",3],[11,"ne","","",3],[11,"hash","","",3],[11,"fmt","","",3],[11,"eq","","",4],[11,"ne","","",4],[11,"fmt","","",4],[11,"clone","","",4],[11,"fmt","","",4],[11,"description","","",4],[11,"eq","","",5],[11,"ne","","",5],[11,"clone","","",5],[11,"fmt","","",5],[11,"fmt","","",6],[11,"new","","Initializes a new `WindowBuilder` with default values.",7],[11,"with_dimensions","","Requests the window to be of specific dimensions.",7],[11,"with_title","","Requests a specific title for the window.",7],[11,"with_fullscreen","","Requests fullscreen mode.",7],[11,"with_shared_lists","","The created window will share all its OpenGL objects with the window in the parameter.",7],[11,"with_gl_version","","Requests to use a specific OpenGL version.",7],[11,"with_gl_debug_flag","","Sets the *debug* flag for the OpenGL context.",7],[11,"with_vsync","","Requests that the window has vsync enabled.",7],[11,"with_visibility","","Sets whether the window will be initially hidden or visible.",7],[11,"with_multisampling","","Sets the multisampling level to request.",7],[11,"with_depth_buffer","","Sets the number of bits in the depth buffer.",7],[11,"with_stencil_buffer","","Sets the number of bits in the stencil buffer.",7],[11,"with_pixel_format","","Sets the number of bits in the color buffer.",7],[11,"with_stereoscopy","","Request the backend to be stereoscopic.",7],[11,"build","","Builds the window.",7],[11,"build_strict","","Builds the window.",7],[11,"new","","Initializes a new `HeadlessRendererBuilder` with default values.",8],[11,"with_gl_version","","Requests to use a specific OpenGL version.",8],[11,"with_gl_debug_flag","","Sets the *debug* flag for the OpenGL context.",8],[11,"build","","Builds the headless context.",8],[11,"build_strict","","Builds the headless context.",8],[11,"default","","",9],[11,"new","","Creates a new OpenGL context, and a Window for platforms where this is appropriate.",9],[11,"is_closed","","Returns true if the window has previously been closed by the user.",9],[11,"should_close","","Returns true if the window has previously been closed by the user.",9],[11,"set_title","","Modifies the title of the window.",9],[11,"show","","Shows the window if it was hidden.",9],[11,"hide","","Hides the window if it was visible.",9],[11,"get_position","","Returns the position of the top-left hand corner of the window relative to the\n top-left hand corner of the desktop.",9],[11,"set_position","","Modifies the position of the window.",9],[11,"get_inner_size","","Returns the size in pixels of the client area of the window.",9],[11,"get_outer_size","","Returns the size in pixels of the window.",9],[11,"set_inner_size","","Modifies the inner size of the window.",9],[11,"poll_events","","Returns an iterator that poll for the next event in the window's events queue.\nReturns `None` if there is no event in the queue.",9],[11,"wait_events","","Returns an iterator that returns events one by one, blocking if necessary until one is\navailable.",9],[11,"make_current","","Sets the context as the current context.",9],[11,"get_proc_address","","Returns the address of an OpenGL function.",9],[11,"swap_buffers","","Swaps the buffers in case of double or triple buffering.",9],[11,"platform_display","","Gets the native platform specific display for this window.\nThis is typically only required when integrating with\nother libraries that need this information.",9],[11,"get_api","","Returns the API that is currently provided by this window.",9],[11,"create_window_proxy","","Create a window proxy for this window, that can be freely\npassed to different threads.",9],[11,"set_window_resize_callback","","Sets a resize callback that is called by Mac (and potentially other\noperating systems) during resize operations. This can be used to repaint\nduring window resizing.",9],[11,"set_cursor","","Modifies the mouse cursor of the window.\nHas no effect on Android.",9],[11,"hidpi_factor","","Returns the ratio between the backing framebuffer resolution and the\nwindow size in screen pixels. This is typically one for a normal display\nand two for a retina display.",9],[11,"get_proc_addr","","",9],[11,"clone","","",10],[11,"wakeup_event_loop","","Triggers a blocked event loop to wake up. This is\ntypically called when another thread wants to wake\nup the blocked rendering thread to cause a refresh.",10],[11,"make_current","","Creates a new OpenGL context\nSets the context as the current context.",11],[11,"get_proc_address","","Returns the address of an OpenGL function.",11],[11,"get_api","","Returns the API that is currently provided by this window.",11],[11,"set_window_resize_callback","","",11],[11,"get_proc_addr","","",11],[6,"Item","",""],[11,"next","","",12],[6,"Item","",""],[11,"next","","",13],[6,"Item","",""],[11,"next","","",14],[11,"get_name","","Returns a human-readable name of the monitor.",15],[11,"get_dimensions","","Returns the number of pixels currently displayed on the monitor.",15]],"paths":[[4,"Event"],[4,"ElementState"],[4,"MouseButton"],[4,"VirtualKeyCode"],[4,"CreationError"],[4,"Api"],[4,"MouseCursor"],[3,"WindowBuilder"],[3,"HeadlessRendererBuilder"],[3,"Window"],[3,"WindowProxy"],[3,"HeadlessContext"],[3,"PollEventsIterator"],[3,"WaitEventsIterator"],[3,"AvailableMonitorsIter"],[3,"MonitorID"]]};
searchIndex['gl_generator'] = {"items":[[0,"","gl_generator","# gl_generator"],[5,"generate_bindings","","Public function that generates Rust source code."],[0,"generators","",""],[5,"gen_type_aliases","gl_generator::generators","Generates all the type aliases for a namespace."],[5,"gen_parameters","","Generates the list of Rust `Arg`s that a `Cmd` requires."],[5,"gen_return_type","","Generates the Rust return type of a `Cmd`."],[5,"gen_symbol_name","","Generates the native symbol name of a `Cmd`."],[0,"global_gen","",""],[3,"GlobalGenerator","gl_generator::generators::global_gen",""],[11,"write","","",0],[0,"static_gen","gl_generator::generators",""],[3,"StaticGenerator","gl_generator::generators::static_gen",""],[11,"write","","",1],[0,"struct_gen","gl_generator::generators",""],[3,"StructGenerator","gl_generator::generators::struct_gen",""],[11,"write","","",2],[0,"static_struct_gen","gl_generator::generators",""],[3,"StaticStructGenerator","gl_generator::generators::static_struct_gen",""],[11,"write","","",3],[8,"Generator","gl_generator::generators","Trait for a bindings generator."],[10,"write","","Builds the GL bindings.",4],[0,"registry","gl_generator",""],[3,"Registry","gl_generator::registry",""],[12,"groups","","",5],[12,"enums","","",5],[12,"cmds","","",5],[12,"features","","",5],[12,"extensions","","",5],[12,"aliases","","",5],[3,"EnumIterator","",""],[3,"CmdIterator","",""],[3,"Group","",""],[12,"name","","",6],[12,"enums","","",6],[3,"EnumNs","",""],[12,"namespace","","",7],[12,"group","","",7],[12,"ty","","",7],[12,"start","","",7],[12,"end","","",7],[12,"vendor","","",7],[12,"comment","","",7],[12,"defs","","",7],[3,"Enum","",""],[12,"ident","","",8],[12,"value","","",8],[12,"alias","","",8],[12,"ty","","",8],[3,"CmdNs","",""],[12,"namespace","","",9],[12,"defs","","",9],[3,"Binding","",""],[12,"ident","","",10],[12,"ty","","",10],[12,"group","","",10],[3,"Cmd","",""],[12,"proto","","",11],[12,"params","","",11],[12,"is_safe","","True if this command doesn't take any pointers.",11],[12,"alias","","",11],[12,"vecequiv","","",11],[12,"glx","","",11],[3,"Feature","",""],[12,"api","","",12],[12,"name","","",12],[12,"number","","",12],[12,"requires","","",12],[12,"removes","","",12],[3,"Require","",""],[12,"comment","","",13],[12,"enums","","A reference to the earlier types, by name",13],[12,"commands","","A reference to the earlier types, by name",13],[3,"Remove","",""],[12,"profile","","",14],[12,"comment","","",14],[12,"enums","","A reference to the earlier types, by name",14],[12,"commands","","A reference to the earlier types, by name",14],[3,"Extension","",""],[12,"name","","",15],[12,"supported","","which apis this extension is defined for (see Feature.api)",15],[12,"requires","","",15],[3,"GlxOpcode","",""],[12,"ty","","",16],[12,"opcode","","",16],[12,"name","","",16],[12,"comment","","",16],[3,"Filter","",""],[12,"extensions","","",17],[12,"profile","","",17],[12,"version","","",17],[12,"api","","",17],[4,"Ns","",""],[13,"Gl","","",18],[13,"Glx","","",18],[13,"Wgl","","",18],[13,"Egl","","",18],[13,"Gles1","","",18],[13,"Gles2","","",18],[11,"fmt_struct_name","","",18],[6,"Err","",""],[11,"from_str","","",18],[11,"fmt","","",18],[11,"from_xml","","Generate a registry from the supplied XML string",5],[11,"get_tys","","Returns a set of all the types used in the supplied registry. This is useful\nfor working out what conversions are needed for the specific registry.",5],[11,"enum_iter","","",5],[11,"cmd_iter","","",5],[6,"Output","",""],[11,"add","","",5],[6,"Item","",""],[11,"next","","",19],[6,"Item","",""],[11,"next","","",20],[11,"clone","","",12],[11,"clone","","",13],[11,"clone","","",14],[11,"clone","","",15]],"paths":[[3,"GlobalGenerator"],[3,"StaticGenerator"],[3,"StructGenerator"],[3,"StaticStructGenerator"],[8,"Generator"],[3,"Registry"],[3,"Group"],[3,"EnumNs"],[3,"Enum"],[3,"CmdNs"],[3,"Binding"],[3,"Cmd"],[3,"Feature"],[3,"Require"],[3,"Remove"],[3,"Extension"],[3,"GlxOpcode"],[3,"Filter"],[4,"Ns"],[3,"EnumIterator"],[3,"CmdIterator"]]};

searchIndex['xml'] = {"items":[[0,"","xml","This crate currently provides almost XML 1.0/1.1-compliant pull parser."],[0,"macros","","Contains several macros used in this crate."],[0,"name","",""],[3,"Name","xml::name","Represents a qualified XML name."],[12,"local_name","","A local name, e.g. `string` in `xsi:string`.",0],[12,"namespace","","A namespace URI, e.g. `http://www.w3.org/2000/xmlns/`.",0],[12,"prefix","","A name prefix, e.g. `xsi` in `xsi:string`.",0],[3,"OwnedName","","An owned variant of `Name`."],[12,"local_name","","A local name, e.g. `string` in `xsi:string`.",1],[12,"namespace","","A namespace URI, e.g. `http://www.w3.org/2000/xmlns/`.",1],[12,"prefix","","A name prefix, e.g. `xsi` in `xsi:string`.",1],[11,"fmt","","",0],[11,"hash","","",0],[11,"eq","","",0],[11,"ne","","",0],[11,"clone","","",0],[11,"fmt","","",0],[11,"to_owned","","Returns an owned variant of the qualified name.",0],[11,"local","","Returns a new `Name` instance representing plain local name.",0],[11,"qualified","","Returns a new `Name` instance representing a qualified name with or without a prefix and\nwith a namespace URI.",0],[11,"to_repr","","Returns correct XML representation of this local name and prefix.",0],[11,"fmt","","",1],[11,"hash","","",1],[11,"eq","","",1],[11,"ne","","",1],[11,"clone","","",1],[11,"fmt","","",1],[11,"borrow","","Constructs a borrowed `Name` based on this owned name.",1],[11,"local","","Returns a new `OwnedName` instance representing a plain local name.",1],[11,"qualified","","Returns a new `OwnedName` instance representing a qualified name with or without\na prefix and with a namespace URI.",1],[11,"prefix_as_ref","","Returns an optional prefix by reference, equivalent to `self.borrow().prefix`\nbut avoids extra work.",1],[11,"namespace_as_ref","","Returns an optional namespace by reference, equivalen to `self.borrow().namespace`\nbut avoids extra work.",1],[11,"to_repr","","See `Name::to_repr()` for details.",1],[6,"Err","",""],[11,"from_str","","Parses the given string slice into a qualified name.",1],[0,"attribute","xml",""],[3,"Attribute","xml::attribute","A borrowed version of an XML attribute."],[12,"name","","Attribute name.",2],[12,"value","","Attribute value.",2],[3,"OwnedAttribute","",""],[12,"name","","",3],[12,"value","","",3],[11,"fmt","","",2],[11,"hash","","",2],[11,"eq","","",2],[11,"ne","","",2],[11,"clone","","",2],[11,"fmt","","",2],[11,"to_owned","","",2],[11,"new","","",2],[11,"fmt","","",3],[11,"hash","","",3],[11,"eq","","",3],[11,"ne","","",3],[11,"clone","","",3],[11,"borrow","","",3],[11,"new","","",3],[11,"fmt","","",3],[0,"common","xml","Contains several types used throughout the library."],[3,"Error","xml::common","XML parsing error."],[4,"XmlVersion","","XML version enumeration."],[13,"Version10","","XML version 1.0.",4],[13,"Version11","","XML version 1.1.",4],[5,"is_whitespace_char","","Checks whether the given character is a white space character (`S`)\nas is defined by XML 1.1 specification, [section 2.3][1]."],[5,"is_name_start_char","","Checks whether the given character is a name start character (`NameStartChar`)\nas is defined by XML 1.1 specification, [section 2.3][1]."],[5,"is_name_char","","Checks whether the given character is a name character (`NameChar`)\nas is defined by XML 1.1 specification, [section 2.3][1]."],[8,"HasPosition","","Represents a thing which has a position inside some textual document."],[10,"row","","Returns a line number inside the document.",5],[10,"col","","Returns a column number inside the document.",5],[11,"fmt","","",6],[11,"eq","","",6],[11,"ne","","",6],[11,"clone","","",6],[11,"fmt","","",6],[11,"row","","",6],[11,"col","","",6],[11,"new","","Creates a new error using position information from the provided\n`HasPosition` object and a message.",6],[11,"new_full","","Creates a new error using provided position information and a message.",6],[11,"msg","","Returns a reference to a message which is contained inside this error.",6],[11,"description","","",6],[11,"eq","","",4],[11,"ne","","",4],[11,"clone","","",4],[11,"fmt","","",4],[0,"escape","xml",""],[5,"escape_str","xml::escape","Performs escaping of common XML characters."],[0,"namespace","xml",""],[3,"Namespace","xml::namespace","Namespace is a map from prefixes to namespace URIs."],[3,"NamespaceMappings","","An iterator over mappings from prefixes to URIs in a namespace."],[3,"NamespaceStack","","Namespace stack is a sequence of namespaces."],[3,"NamespaceStackMappings","","An iterator over mappings from prefixes to URIs in a namespace stack."],[6,"UriMapping","",""],[17,"NS_XMLNS_PREFIX","",""],[17,"NS_XMLNS_URI","",""],[17,"NS_XML_PREFIX","",""],[17,"NS_XML_URI","",""],[17,"NS_EMPTY_URI","",""],[8,"NamespaceIterable","","Denotes something which contains namespace URI mappings."],[16,"Iter","xml::namespace::NamespaceIterable",""],[10,"uri_mappings","xml::namespace","",7],[11,"clone","","",8],[11,"eq","","",8],[11,"ne","","",8],[11,"empty","","Returns an empty namespace.",8],[11,"is_empty","","Checks whether this namespace is empty.",8],[11,"is_essentially_empty","","Checks whether this namespace is essentially empty, that is, it does not contain\nanything but the default mappings.",8],[11,"put","","Puts a mapping into this namespace.",8],[11,"force_put","","Puts a mapping into this namespace forcefully.",8],[11,"get","","Queries the namespace for the given prefix.",8],[6,"Item","",""],[11,"next","","",9],[6,"Iter","",""],[11,"uri_mappings","","",8],[11,"eq","","",10],[11,"ne","","",10],[11,"clone","","",10],[11,"empty","","Returns an empty namespace stack.",10],[11,"default","","Returns a namespace stack with default items in it.",10],[11,"push_empty","","Adds an empty namespace to the top of this stack.",10],[11,"pop","","Removes a namespace at the top of the stack.",10],[11,"peek","","Returns a namespace at the top of the stack, leaving the stack intact.",10],[11,"put","","Puts a mapping into the topmost namespace in this stack.",10],[11,"get","","Performs a search for the given prefix in the whole stack.",10],[11,"squash","","Combines this stack of namespaces into a single namespace.",10],[6,"Item","",""],[11,"next","","",11],[6,"Iter","",""],[11,"uri_mappings","","",10],[0,"reader","xml","Contains high-level interface for a pull-based XML parser."],[3,"EventReader","xml::reader","Simple wrapper around an `std::old_io::Buffer` which provides pull-based XML parsing."],[3,"Events","","XML events iterator, created by `events()` method on `Parser`."],[0,"config","","Contains parser configuration structure."],[3,"ParserConfig","xml::reader::config","Parser configuration structure."],[12,"trim_whitespace","","Whether or not should whitespace be removed. Default is false.",12],[12,"whitespace_to_characters","","Whether or not should whitespace be converted to characters.\nDefault is false.",12],[12,"cdata_to_characters","","Whether or not should CDATA be converted to characters.\nDefault is false.",12],[12,"ignore_comments","","Whether or not should comments be omitted. Default is true.",12],[12,"coalesce_characters","","Whether or not should sequential `Characters` events be merged.\nDefault is true.",12],[11,"new","","Returns a new config with default values.",12],[11,"trim_whitespace","","Sets the field to the provided value and returns updated config object.",12],[11,"whitespace_to_characters","","Sets the field to the provided value and returns updated config object.",12],[11,"cdata_to_characters","","Sets the field to the provided value and returns updated config object.",12],[11,"ignore_comments","","Sets the field to the provided value and returns updated config object.",12],[11,"coalesce_characters","","Sets the field to the provided value and returns updated config object.",12],[0,"events","xml::reader","Contains `XmlEvent` datatype, instances of which are emitted by the parser."],[4,"XmlEvent","xml::reader::events","An element of an XML input stream."],[13,"StartDocument","","Corresponds to XML document declaration.",13],[12,"version","xml::reader::events::XmlEvent","XML version.",13],[12,"encoding","","XML document encoding.",13],[12,"standalone","","XML standalone declaration.",13],[13,"EndDocument","xml::reader::events","Denotes to the end of the document stream.",13],[13,"ProcessingInstruction","","Denotes an XML processing instruction.",13],[12,"name","xml::reader::events::XmlEvent","Processing instruction target.",13],[12,"data","","Processing instruction content.",13],[13,"StartElement","xml::reader::events","Denotes a beginning of an XML element.",13],[12,"name","xml::reader::events::XmlEvent","Qualified name of the element.",13],[12,"attributes","","A list of attributes associated with the element.",13],[12,"namespace","","Contents of the namespace mapping at this point of the document.",13],[13,"EndElement","xml::reader::events","Denotes an end of an XML document.",13],[12,"name","xml::reader::events::XmlEvent","Qualified name of the element.",13],[13,"CData","xml::reader::events","Denotes CDATA content.",13],[13,"Comment","","Denotes a comment.",13],[13,"Characters","","Denotes character data outside of tags.",13],[13,"Whitespace","","Denotes a chunk of whitespace outside of tags.",13],[13,"Error","","Denotes parsing error.",13],[11,"clone","","",13],[11,"eq","","",13],[11,"ne","","",13],[11,"fmt","","",13],[11,"as_writer_event","","",13],[11,"new","xml::reader","Creates a new parser, consuming given `Buffer`.",14],[11,"new_with_config","","Creates a new parser with the provded configuration, consuming given `Buffer`.",14],[11,"next","","Pulls and returns next XML event from the stream.",14],[11,"events","","Returns an iterator over XML events.",14],[6,"Item","",""],[11,"next","","",15],[11,"new_from_string","","Convenience method to create a reader from an owned string.",14],[11,"new_from_bytes","","Convenience method to create a reader from an owned vector of bytes.",14],[11,"new_from_str_slice","","Convenience method to create a reader from a string slice.",14],[11,"new_from_bytes_slice","","Convenience method to create a reader from a slice of bytes.",14],[0,"writer","xml",""],[3,"EventWriter","xml::writer",""],[0,"config","","Contains emitter configuration structure."],[3,"EmitterConfig","xml::writer::config","Emitter configuration structure."],[12,"line_separator","","Line separator used to separate lines in formatted output. Default is `\"\\n\"`.",16],[12,"indent_string","","A string which will be used for a single level of indentation. Default is `\"  \"`\n(two spaces).",16],[12,"perform_indent","","Whether or not the emitted document should be indented. Default is false.",16],[12,"write_document_declaration","","Whether or not to write XML document declaration at the beginning of a document.\nDefault is true.",16],[12,"normalize_empty_elements","","Whether or not to convert elements with empty content to empty elements. Default is true.",16],[12,"cdata_to_characters","","Whether or not to emit CDATA events as plain characters. Default is false.",16],[11,"new","","Creates an emitter configuration with default values.",16],[11,"line_separator","","Sets the field to the provided value and returns updated config object.",16],[11,"indent_string","","Sets the field to the provided value and returns updated config object.",16],[11,"perform_indent","","Sets the field to the provided value and returns updated config object.",16],[11,"write_document_declaration","","Sets the field to the provided value and returns updated config object.",16],[11,"normalize_empty_elements","","Sets the field to the provided value and returns updated config object.",16],[11,"cdata_to_characters","","Sets the field to the provided value and returns updated config object.",16],[0,"events","xml::writer",""],[4,"XmlEvent","xml::writer::events","An element of an XML output stream."],[13,"StartDocument","","Corresponds to XML document declaration.",17],[12,"version","xml::writer::events::XmlEvent","XML version.",17],[12,"encoding","","XML document encoding.",17],[12,"standalone","","XML standalone declaration.",17],[13,"ProcessingInstruction","xml::writer::events","Denotes an XML processing instruction.",17],[12,"name","xml::writer::events::XmlEvent","Processing instruction target.",17],[12,"data","","Processing instruction content.",17],[13,"StartElement","xml::writer::events","Denotes a beginning of an XML element.",17],[12,"name","xml::writer::events::XmlEvent","Qualified name of the element.",17],[12,"attributes","","A list of attributes associated with the element.",17],[12,"namespace","","Contents of the namespace mapping at this point of the document.",17],[13,"EndElement","xml::writer::events","Denotes an end of an XML document.",17],[12,"name","xml::writer::events::XmlEvent","Qualified name of the element.",17],[13,"CData","xml::writer::events","Denotes CDATA content.",17],[13,"Comment","","Denotes a comment.",17],[13,"Characters","","Denotes character data outside of tags.",17],[6,"EventWriterResult","xml::writer",""],[11,"new","","",18],[11,"new_with_config","","",18],[11,"write","","",18],[11,"new_into_mem","","",18],[11,"new_into_mem_config","","",18],[0,"util","xml",""],[3,"ClonedPairwise","xml::util",""],[8,"OptionBorrowExt","",""],[10,"borrow_internals","","",19],[8,"IteratorClonedPairwiseExt","",""],[10,"cloned_pairwise","","",20],[11,"borrow_internals","core::option","",21],[6,"Item","xml::util",""],[11,"next","","",22]],"paths":[[3,"Name"],[3,"OwnedName"],[3,"Attribute"],[3,"OwnedAttribute"],[4,"XmlVersion"],[8,"HasPosition"],[3,"Error"],[8,"NamespaceIterable"],[3,"Namespace"],[3,"NamespaceMappings"],[3,"NamespaceStack"],[3,"NamespaceStackMappings"],[3,"ParserConfig"],[4,"XmlEvent"],[3,"EventReader"],[3,"Events"],[3,"EmitterConfig"],[4,"XmlEvent"],[3,"EventWriter"],[8,"OptionBorrowExt"],[8,"IteratorClonedPairwiseExt"],[4,"Option"],[3,"ClonedPairwise"]]};

searchIndex['gl_common'] = {"items":[[0,"","gl_common","Defines everything used by `gl_generator`."],[8,"GlFunctionsSource","",""],[10,"get_proc_addr","","",0]],"paths":[[8,"GlFunctionsSource"]]};

searchIndex['log'] = {"items":[[0,"","log","A lightweight logging facade."],[3,"LogRecord","","The \"payload\" of a log message."],[3,"LogLocation","","The location of a log message."],[12,"module_path","","The module path of the message.",0],[12,"file","","The source file containing the message.",0],[12,"line","","The line containing the message.",0],[3,"MaxLogLevelFilter","","A token providing read and write access to the global maximum log level\nfilter."],[3,"SetLoggerError","","The type returned by `set_logger` if `set_logger` has already been called."],[4,"LogLevel","","An enum representing the available verbosity levels of the logging framework"],[13,"Error","","The \"error\" level.",1],[13,"Warn","","The \"warn\" level.",1],[13,"Info","","The \"info\" level.",1],[13,"Debug","","The \"debug\" level.",1],[13,"Trace","","The \"trace\" level.",1],[4,"LogLevelFilter","","An enum representing the available verbosity level filters of the logging\nframework."],[13,"Off","","A level lower than all log levels.",2],[13,"Error","","Corresponds to the `Error` log level.",2],[13,"Warn","","Corresponds to the `Warn` log level.",2],[13,"Info","","Corresponds to the `Trace` log level.",2],[13,"Debug","","Corresponds to the `Debug` log level.",2],[13,"Trace","","Corresponds to the `Trace` log level.",2],[5,"max_log_level","","Returns the current maximum log level."],[5,"set_logger","","Sets the global logger."],[5,"enabled","","Determines if the current logger will ignore a log message at the specified\nlevel from the specified module."],[5,"log","","Logs a message."],[8,"Log","","A trait encapsulating the operations required of a logger"],[10,"enabled","","Determines if a log message sent at the specified level from the\nspecified module would be logged.",3],[10,"log","","Logs the `LogRecord`.",3],[11,"fmt","","",1],[11,"clone","","",1],[11,"eq","","",1],[11,"eq","","",1],[11,"partial_cmp","","",1],[11,"partial_cmp","","",1],[11,"cmp","","",1],[6,"Err","",""],[11,"from_str","","",1],[11,"fmt","","",1],[11,"max","","Returns the most verbose logging level.",1],[11,"to_log_level_filter","","Converts the `LogLevel` to the equivalent `LogLevelFilter`.",1],[11,"fmt","","",2],[11,"clone","","",2],[11,"eq","","",2],[11,"eq","","",2],[11,"partial_cmp","","",2],[11,"partial_cmp","","",2],[11,"cmp","","",2],[6,"Err","",""],[11,"from_str","","",2],[11,"fmt","","",2],[11,"max","","Returns the most verbose logging level filter.",2],[11,"to_log_level","","Converts `self` to the equivalent `LogLevel`.",2],[11,"new","","Creates a new `LogRecord`.",4],[11,"args","","The message body.",4],[11,"location","","The location of the log directive.",4],[11,"level","","The verbosity level of the message.",4],[11,"fmt","","",0],[11,"clone","","",0],[11,"fmt","","",5],[11,"get","","Gets the current maximum log level filter.",5],[11,"set","","Sets the maximum log level.",5],[11,"fmt","","",6],[11,"fmt","","",6],[14,"log!","","The standard logging macro."],[14,"error!","","Logs a message at the error level."],[14,"warn!","","Logs a message at the warn level."],[14,"info!","","Logs a message at the info level."],[14,"debug!","","Logs a message at the debug level."],[14,"trace!","","Logs a message at the trace level."],[14,"log_enabled!","","Determines if a message logged at the specified level in that module will\nbe logged."]],"paths":[[3,"LogLocation"],[4,"LogLevel"],[4,"LogLevelFilter"],[8,"Log"],[3,"LogRecord"],[3,"MaxLogLevelFilter"],[3,"SetLoggerError"]]};

searchIndex['libc'] = {"items":[[0,"","libc","Bindings for the C standard library and other platform libraries"],[0,"types","",""],[0,"common","libc::types",""],[0,"c95","libc::types::common",""],[4,"c_void","libc::types::common::c95","Type used to construct void pointers for use with C."],[13,"__variant1","","",0],[13,"__variant2","","",0],[4,"FILE","",""],[4,"fpos_t","",""],[0,"c99","libc::types::common",""],[6,"int8_t","libc::types::common::c99",""],[6,"int16_t","",""],[6,"int32_t","",""],[6,"int64_t","",""],[6,"uint8_t","",""],[6,"uint16_t","",""],[6,"uint32_t","",""],[6,"uint64_t","",""],[0,"posix88","libc::types::common",""],[4,"DIR","libc::types::common::posix88",""],[4,"dirent_t","",""],[0,"os","libc::types",""],[0,"common","libc::types::os",""],[0,"posix01","libc::types::os::common",""],[3,"glob_t","libc::types::os::common::posix01",""],[12,"gl_pathc","","",1],[12,"gl_pathv","","",1],[12,"gl_offs","","",1],[12,"__unused1","","",1],[12,"__unused2","","",1],[12,"__unused3","","",1],[12,"__unused4","","",1],[12,"__unused5","","",1],[3,"timeval","",""],[12,"tv_sec","","",2],[12,"tv_usec","","",2],[3,"timespec","",""],[12,"tv_sec","","",3],[12,"tv_nsec","","",3],[4,"timezone","",""],[6,"pthread_t","",""],[6,"sighandler_t","",""],[0,"bsd44","libc::types::os::common",""],[3,"sockaddr","libc::types::os::common::bsd44",""],[12,"sa_family","","",4],[12,"sa_data","","",4],[3,"sockaddr_storage","",""],[12,"ss_family","","",5],[12,"__ss_align","","",5],[12,"__ss_pad2","","",5],[3,"sockaddr_in","",""],[12,"sin_family","","",6],[12,"sin_port","","",6],[12,"sin_addr","","",6],[12,"sin_zero","","",6],[3,"in_addr","",""],[12,"s_addr","","",7],[3,"sockaddr_in6","",""],[12,"sin6_family","","",8],[12,"sin6_port","","",8],[12,"sin6_flowinfo","","",8],[12,"sin6_addr","","",8],[12,"sin6_scope_id","","",8],[3,"in6_addr","",""],[12,"s6_addr","","",9],[3,"ip_mreq","",""],[12,"imr_multiaddr","","",10],[12,"imr_interface","","",10],[3,"ip6_mreq","",""],[12,"ipv6mr_multiaddr","","",11],[12,"ipv6mr_interface","","",11],[3,"addrinfo","",""],[12,"ai_flags","","",12],[12,"ai_family","","",12],[12,"ai_socktype","","",12],[12,"ai_protocol","","",12],[12,"ai_addrlen","","",12],[12,"ai_addr","","",12],[12,"ai_canonname","","",12],[12,"ai_next","","",12],[3,"sockaddr_un","",""],[12,"sun_family","","",13],[12,"sun_path","","",13],[3,"ifaddrs","",""],[12,"ifa_next","","",14],[12,"ifa_name","","",14],[12,"ifa_flags","","",14],[12,"ifa_addr","","",14],[12,"ifa_netmask","","",14],[12,"ifa_ifu","","",14],[12,"ifa_data","","",14],[6,"socklen_t","",""],[6,"sa_family_t","",""],[6,"in_port_t","",""],[6,"in_addr_t","",""],[0,"arch","libc::types::os",""],[0,"c95","libc::types::os::arch",""],[6,"c_char","libc::types::os::arch::c95",""],[6,"c_schar","",""],[6,"c_uchar","",""],[6,"c_short","",""],[6,"c_ushort","",""],[6,"c_int","",""],[6,"c_uint","",""],[6,"c_long","",""],[6,"c_ulong","",""],[6,"c_float","",""],[6,"c_double","",""],[6,"size_t","",""],[6,"ptrdiff_t","",""],[6,"clock_t","",""],[6,"time_t","",""],[6,"suseconds_t","",""],[6,"wchar_t","",""],[0,"c99","libc::types::os::arch",""],[6,"c_longlong","libc::types::os::arch::c99",""],[6,"c_ulonglong","",""],[6,"intptr_t","",""],[6,"uintptr_t","",""],[6,"intmax_t","",""],[6,"uintmax_t","",""],[0,"posix88","libc::types::os::arch",""],[6,"off_t","libc::types::os::arch::posix88",""],[6,"dev_t","",""],[6,"ino_t","",""],[6,"pid_t","",""],[6,"uid_t","",""],[6,"gid_t","",""],[6,"useconds_t","",""],[6,"mode_t","",""],[6,"ssize_t","",""],[0,"posix01","libc::types::os::arch",""],[3,"stat","libc::types::os::arch::posix01",""],[12,"st_dev","","",15],[12,"st_ino","","",15],[12,"st_nlink","","",15],[12,"st_mode","","",15],[12,"st_uid","","",15],[12,"st_gid","","",15],[12,"__pad0","","",15],[12,"st_rdev","","",15],[12,"st_size","","",15],[12,"st_blksize","","",15],[12,"st_blocks","","",15],[12,"st_atime","","",15],[12,"st_atime_nsec","","",15],[12,"st_mtime","","",15],[12,"st_mtime_nsec","","",15],[12,"st_ctime","","",15],[12,"st_ctime_nsec","","",15],[12,"__unused","","",15],[3,"utimbuf","",""],[12,"actime","","",16],[12,"modtime","","",16],[3,"pthread_attr_t","",""],[12,"__size","","",17],[6,"nlink_t","",""],[6,"blksize_t","",""],[6,"blkcnt_t","",""],[0,"extra","libc::types::os::arch",""],[3,"sockaddr_ll","libc::types::os::arch::extra",""],[12,"sll_family","","",18],[12,"sll_protocol","","",18],[12,"sll_ifindex","","",18],[12,"sll_hatype","","",18],[12,"sll_pkttype","","",18],[12,"sll_halen","","",18],[12,"sll_addr","","",18],[0,"consts","libc",""],[0,"os","libc::consts",""],[0,"c95","libc::consts::os",""],[17,"EXIT_FAILURE","libc::consts::os::c95",""],[17,"EXIT_SUCCESS","",""],[17,"RAND_MAX","",""],[17,"EOF","",""],[17,"SEEK_SET","",""],[17,"SEEK_CUR","",""],[17,"SEEK_END","",""],[17,"_IOFBF","",""],[17,"_IONBF","",""],[17,"_IOLBF","",""],[17,"BUFSIZ","",""],[17,"FOPEN_MAX","",""],[17,"FILENAME_MAX","",""],[17,"L_tmpnam","",""],[17,"TMP_MAX","",""],[0,"posix88","libc::consts::os",""],[17,"O_RDONLY","libc::consts::os::posix88",""],[17,"O_WRONLY","",""],[17,"O_RDWR","",""],[17,"O_APPEND","",""],[17,"O_CREAT","",""],[17,"O_EXCL","",""],[17,"O_TRUNC","",""],[17,"S_IFIFO","",""],[17,"S_IFCHR","",""],[17,"S_IFBLK","",""],[17,"S_IFDIR","",""],[17,"S_IFREG","",""],[17,"S_IFLNK","",""],[17,"S_IFMT","",""],[17,"S_IEXEC","",""],[17,"S_IWRITE","",""],[17,"S_IREAD","",""],[17,"S_IRWXU","",""],[17,"S_IXUSR","",""],[17,"S_IWUSR","",""],[17,"S_IRUSR","",""],[17,"F_OK","",""],[17,"R_OK","",""],[17,"W_OK","",""],[17,"X_OK","",""],[17,"STDIN_FILENO","",""],[17,"STDOUT_FILENO","",""],[17,"STDERR_FILENO","",""],[17,"F_LOCK","",""],[17,"F_TEST","",""],[17,"F_TLOCK","",""],[17,"F_ULOCK","",""],[17,"SIGHUP","",""],[17,"SIGINT","",""],[17,"SIGQUIT","",""],[17,"SIGILL","",""],[17,"SIGABRT","",""],[17,"SIGFPE","",""],[17,"SIGKILL","",""],[17,"SIGSEGV","",""],[17,"SIGPIPE","",""],[17,"SIGALRM","",""],[17,"SIGTERM","",""],[17,"PROT_NONE","",""],[17,"PROT_READ","",""],[17,"PROT_WRITE","",""],[17,"PROT_EXEC","",""],[17,"MAP_FILE","",""],[17,"MAP_SHARED","",""],[17,"MAP_PRIVATE","",""],[17,"MAP_FIXED","",""],[17,"MAP_ANON","",""],[17,"MAP_FAILED","",""],[17,"MCL_CURRENT","",""],[17,"MCL_FUTURE","",""],[17,"MS_ASYNC","",""],[17,"MS_INVALIDATE","",""],[17,"MS_SYNC","",""],[17,"EPERM","",""],[17,"ENOENT","",""],[17,"ESRCH","",""],[17,"EINTR","",""],[17,"EIO","",""],[17,"ENXIO","",""],[17,"E2BIG","",""],[17,"ENOEXEC","",""],[17,"EBADF","",""],[17,"ECHILD","",""],[17,"EAGAIN","",""],[17,"ENOMEM","",""],[17,"EACCES","",""],[17,"EFAULT","",""],[17,"ENOTBLK","",""],[17,"EBUSY","",""],[17,"EEXIST","",""],[17,"EXDEV","",""],[17,"ENODEV","",""],[17,"ENOTDIR","",""],[17,"EISDIR","",""],[17,"EINVAL","",""],[17,"ENFILE","",""],[17,"EMFILE","",""],[17,"ENOTTY","",""],[17,"ETXTBSY","",""],[17,"EFBIG","",""],[17,"ENOSPC","",""],[17,"ESPIPE","",""],[17,"EROFS","",""],[17,"EMLINK","",""],[17,"EPIPE","",""],[17,"EDOM","",""],[17,"ERANGE","",""],[17,"EDEADLK","",""],[17,"ENAMETOOLONG","",""],[17,"ENOLCK","",""],[17,"ENOSYS","",""],[17,"ENOTEMPTY","",""],[17,"ELOOP","",""],[17,"EWOULDBLOCK","",""],[17,"ENOMSG","",""],[17,"EIDRM","",""],[17,"ECHRNG","",""],[17,"EL2NSYNC","",""],[17,"EL3HLT","",""],[17,"EL3RST","",""],[17,"ELNRNG","",""],[17,"EUNATCH","",""],[17,"ENOCSI","",""],[17,"EL2HLT","",""],[17,"EBADE","",""],[17,"EBADR","",""],[17,"EXFULL","",""],[17,"ENOANO","",""],[17,"EBADRQC","",""],[17,"EBADSLT","",""],[17,"EDEADLOCK","",""],[17,"EBFONT","",""],[17,"ENOSTR","",""],[17,"ENODATA","",""],[17,"ETIME","",""],[17,"ENOSR","",""],[17,"ENONET","",""],[17,"ENOPKG","",""],[17,"EREMOTE","",""],[17,"ENOLINK","",""],[17,"EADV","",""],[17,"ESRMNT","",""],[17,"ECOMM","",""],[17,"EPROTO","",""],[17,"EMULTIHOP","",""],[17,"EDOTDOT","",""],[17,"EBADMSG","",""],[17,"EOVERFLOW","",""],[17,"ENOTUNIQ","",""],[17,"EBADFD","",""],[17,"EREMCHG","",""],[17,"ELIBACC","",""],[17,"ELIBBAD","",""],[17,"ELIBSCN","",""],[17,"ELIBMAX","",""],[17,"ELIBEXEC","",""],[17,"EILSEQ","",""],[17,"ERESTART","",""],[17,"ESTRPIPE","",""],[17,"EUSERS","",""],[17,"ENOTSOCK","",""],[17,"EDESTADDRREQ","",""],[17,"EMSGSIZE","",""],[17,"EPROTOTYPE","",""],[17,"ENOPROTOOPT","",""],[17,"EPROTONOSUPPORT","",""],[17,"ESOCKTNOSUPPORT","",""],[17,"EOPNOTSUPP","",""],[17,"EPFNOSUPPORT","",""],[17,"EAFNOSUPPORT","",""],[17,"EADDRINUSE","",""],[17,"EADDRNOTAVAIL","",""],[17,"ENETDOWN","",""],[17,"ENETUNREACH","",""],[17,"ENETRESET","",""],[17,"ECONNABORTED","",""],[17,"ECONNRESET","",""],[17,"ENOBUFS","",""],[17,"EISCONN","",""],[17,"ENOTCONN","",""],[17,"ESHUTDOWN","",""],[17,"ETOOMANYREFS","",""],[17,"ETIMEDOUT","",""],[17,"ECONNREFUSED","",""],[17,"EHOSTDOWN","",""],[17,"EHOSTUNREACH","",""],[17,"EALREADY","",""],[17,"EINPROGRESS","",""],[17,"ESTALE","",""],[17,"EUCLEAN","",""],[17,"ENOTNAM","",""],[17,"ENAVAIL","",""],[17,"EISNAM","",""],[17,"EREMOTEIO","",""],[17,"EDQUOT","",""],[17,"ENOMEDIUM","",""],[17,"EMEDIUMTYPE","",""],[17,"ECANCELED","",""],[17,"ENOKEY","",""],[17,"EKEYEXPIRED","",""],[17,"EKEYREVOKED","",""],[17,"EKEYREJECTED","",""],[17,"EOWNERDEAD","",""],[17,"ENOTRECOVERABLE","",""],[17,"ERFKILL","",""],[17,"EHWPOISON","",""],[0,"posix01","libc::consts::os",""],[17,"F_DUPFD","libc::consts::os::posix01",""],[17,"F_GETFD","",""],[17,"F_SETFD","",""],[17,"F_GETFL","",""],[17,"F_SETFL","",""],[17,"SIGTRAP","",""],[17,"SIGPIPE","",""],[17,"SIG_IGN","",""],[17,"GLOB_ERR","",""],[17,"GLOB_MARK","",""],[17,"GLOB_NOSORT","",""],[17,"GLOB_DOOFFS","",""],[17,"GLOB_NOCHECK","",""],[17,"GLOB_APPEND","",""],[17,"GLOB_NOESCAPE","",""],[17,"GLOB_NOSPACE","",""],[17,"GLOB_ABORTED","",""],[17,"GLOB_NOMATCH","",""],[17,"POSIX_MADV_NORMAL","",""],[17,"POSIX_MADV_RANDOM","",""],[17,"POSIX_MADV_SEQUENTIAL","",""],[17,"POSIX_MADV_WILLNEED","",""],[17,"POSIX_MADV_DONTNEED","",""],[17,"_SC_MQ_PRIO_MAX","",""],[17,"_SC_IOV_MAX","",""],[17,"_SC_GETGR_R_SIZE_MAX","",""],[17,"_SC_GETPW_R_SIZE_MAX","",""],[17,"_SC_LOGIN_NAME_MAX","",""],[17,"_SC_TTY_NAME_MAX","",""],[17,"_SC_THREADS","",""],[17,"_SC_THREAD_SAFE_FUNCTIONS","",""],[17,"_SC_THREAD_DESTRUCTOR_ITERATIONS","",""],[17,"_SC_THREAD_KEYS_MAX","",""],[17,"_SC_THREAD_STACK_MIN","",""],[17,"_SC_THREAD_THREADS_MAX","",""],[17,"_SC_THREAD_ATTR_STACKADDR","",""],[17,"_SC_THREAD_ATTR_STACKSIZE","",""],[17,"_SC_THREAD_PRIORITY_SCHEDULING","",""],[17,"_SC_THREAD_PRIO_INHERIT","",""],[17,"_SC_THREAD_PRIO_PROTECT","",""],[17,"_SC_THREAD_PROCESS_SHARED","",""],[17,"_SC_ATEXIT_MAX","",""],[17,"_SC_XOPEN_VERSION","",""],[17,"_SC_XOPEN_XCU_VERSION","",""],[17,"_SC_XOPEN_UNIX","",""],[17,"_SC_XOPEN_CRYPT","",""],[17,"_SC_XOPEN_ENH_I18N","",""],[17,"_SC_XOPEN_SHM","",""],[17,"_SC_XOPEN_LEGACY","",""],[17,"_SC_XOPEN_REALTIME","",""],[17,"_SC_XOPEN_REALTIME_THREADS","",""],[17,"PTHREAD_CREATE_JOINABLE","",""],[17,"PTHREAD_CREATE_DETACHED","",""],[17,"PTHREAD_STACK_MIN","",""],[17,"CLOCK_REALTIME","",""],[17,"CLOCK_MONOTONIC","",""],[0,"bsd44","libc::consts::os",""],[17,"MADV_NORMAL","libc::consts::os::bsd44",""],[17,"MADV_RANDOM","",""],[17,"MADV_SEQUENTIAL","",""],[17,"MADV_WILLNEED","",""],[17,"MADV_DONTNEED","",""],[17,"MADV_REMOVE","",""],[17,"MADV_DONTFORK","",""],[17,"MADV_DOFORK","",""],[17,"MADV_MERGEABLE","",""],[17,"MADV_UNMERGEABLE","",""],[17,"MADV_HWPOISON","",""],[17,"IFF_LOOPBACK","",""],[17,"AF_UNIX","",""],[17,"AF_INET","",""],[17,"AF_INET6","",""],[17,"SOCK_STREAM","",""],[17,"SOCK_DGRAM","",""],[17,"SOCK_RAW","",""],[17,"IPPROTO_TCP","",""],[17,"IPPROTO_IP","",""],[17,"IPPROTO_IPV6","",""],[17,"IP_MULTICAST_TTL","",""],[17,"IP_MULTICAST_LOOP","",""],[17,"IP_TTL","",""],[17,"IP_HDRINCL","",""],[17,"IP_ADD_MEMBERSHIP","",""],[17,"IP_DROP_MEMBERSHIP","",""],[17,"IPV6_ADD_MEMBERSHIP","",""],[17,"IPV6_DROP_MEMBERSHIP","",""],[17,"TCP_NODELAY","",""],[17,"SOL_SOCKET","",""],[17,"SO_KEEPALIVE","",""],[17,"SO_BROADCAST","",""],[17,"SO_REUSEADDR","",""],[17,"SO_ERROR","",""],[17,"SHUT_RD","",""],[17,"SHUT_WR","",""],[17,"SHUT_RDWR","",""],[0,"extra","libc::consts::os",""],[17,"AF_PACKET","libc::consts::os::extra",""],[17,"IPPROTO_RAW","",""],[17,"O_RSYNC","",""],[17,"O_DSYNC","",""],[17,"O_NONBLOCK","",""],[17,"O_SYNC","",""],[17,"PROT_GROWSDOWN","",""],[17,"PROT_GROWSUP","",""],[17,"MAP_TYPE","",""],[17,"MAP_ANONYMOUS","",""],[17,"MAP_32BIT","",""],[17,"MAP_GROWSDOWN","",""],[17,"MAP_DENYWRITE","",""],[17,"MAP_EXECUTABLE","",""],[17,"MAP_LOCKED","",""],[17,"MAP_NONRESERVE","",""],[17,"MAP_POPULATE","",""],[17,"MAP_NONBLOCK","",""],[17,"MAP_STACK","",""],[0,"sysconf","libc::consts::os",""],[17,"_SC_ARG_MAX","libc::consts::os::sysconf",""],[17,"_SC_CHILD_MAX","",""],[17,"_SC_CLK_TCK","",""],[17,"_SC_NGROUPS_MAX","",""],[17,"_SC_OPEN_MAX","",""],[17,"_SC_STREAM_MAX","",""],[17,"_SC_TZNAME_MAX","",""],[17,"_SC_JOB_CONTROL","",""],[17,"_SC_SAVED_IDS","",""],[17,"_SC_REALTIME_SIGNALS","",""],[17,"_SC_PRIORITY_SCHEDULING","",""],[17,"_SC_TIMERS","",""],[17,"_SC_ASYNCHRONOUS_IO","",""],[17,"_SC_PRIORITIZED_IO","",""],[17,"_SC_SYNCHRONIZED_IO","",""],[17,"_SC_FSYNC","",""],[17,"_SC_MAPPED_FILES","",""],[17,"_SC_MEMLOCK","",""],[17,"_SC_MEMLOCK_RANGE","",""],[17,"_SC_MEMORY_PROTECTION","",""],[17,"_SC_MESSAGE_PASSING","",""],[17,"_SC_SEMAPHORES","",""],[17,"_SC_SHARED_MEMORY_OBJECTS","",""],[17,"_SC_AIO_LISTIO_MAX","",""],[17,"_SC_AIO_MAX","",""],[17,"_SC_AIO_PRIO_DELTA_MAX","",""],[17,"_SC_DELAYTIMER_MAX","",""],[17,"_SC_MQ_OPEN_MAX","",""],[17,"_SC_VERSION","",""],[17,"_SC_PAGESIZE","",""],[17,"_SC_RTSIG_MAX","",""],[17,"_SC_SEM_NSEMS_MAX","",""],[17,"_SC_SEM_VALUE_MAX","",""],[17,"_SC_SIGQUEUE_MAX","",""],[17,"_SC_TIMER_MAX","",""],[17,"_SC_BC_BASE_MAX","",""],[17,"_SC_BC_DIM_MAX","",""],[17,"_SC_BC_SCALE_MAX","",""],[17,"_SC_BC_STRING_MAX","",""],[17,"_SC_COLL_WEIGHTS_MAX","",""],[17,"_SC_EXPR_NEST_MAX","",""],[17,"_SC_LINE_MAX","",""],[17,"_SC_RE_DUP_MAX","",""],[17,"_SC_2_VERSION","",""],[17,"_SC_2_C_BIND","",""],[17,"_SC_2_C_DEV","",""],[17,"_SC_2_FORT_DEV","",""],[17,"_SC_2_FORT_RUN","",""],[17,"_SC_2_SW_DEV","",""],[17,"_SC_2_LOCALEDEF","",""],[17,"_SC_2_CHAR_TERM","",""],[17,"_SC_2_C_VERSION","",""],[17,"_SC_2_UPE","",""],[17,"_SC_XBS5_ILP32_OFF32","",""],[17,"_SC_XBS5_ILP32_OFFBIG","",""],[17,"_SC_XBS5_LPBIG_OFFBIG","",""],[0,"funcs","libc",""],[0,"c95","libc::funcs",""],[0,"ctype","libc::funcs::c95",""],[5,"isalnum","libc::funcs::c95::ctype",""],[5,"isalpha","",""],[5,"iscntrl","",""],[5,"isdigit","",""],[5,"isgraph","",""],[5,"islower","",""],[5,"isprint","",""],[5,"ispunct","",""],[5,"isspace","",""],[5,"isupper","",""],[5,"isxdigit","",""],[5,"tolower","",""],[5,"toupper","",""],[0,"stdio","libc::funcs::c95",""],[5,"fopen","libc::funcs::c95::stdio",""],[5,"freopen","",""],[5,"fflush","",""],[5,"fclose","",""],[5,"remove","",""],[5,"rename","",""],[5,"tmpfile","",""],[5,"setvbuf","",""],[5,"setbuf","",""],[5,"fgetc","",""],[5,"fgets","",""],[5,"fputc","",""],[5,"fputs","",""],[5,"puts","",""],[5,"ungetc","",""],[5,"fread","",""],[5,"fwrite","",""],[5,"fseek","",""],[5,"ftell","",""],[5,"rewind","",""],[5,"fgetpos","",""],[5,"fsetpos","",""],[5,"feof","",""],[5,"ferror","",""],[5,"perror","",""],[0,"stdlib","libc::funcs::c95",""],[5,"abs","libc::funcs::c95::stdlib",""],[5,"labs","",""],[5,"atof","",""],[5,"atoi","",""],[5,"strtod","",""],[5,"strtol","",""],[5,"strtoul","",""],[5,"calloc","",""],[5,"malloc","",""],[5,"realloc","",""],[5,"free","",""],[5,"exit","","Exits the running program in a possibly dangerous manner."],[5,"_exit","",""],[5,"atexit","",""],[5,"system","",""],[5,"getenv","",""],[5,"rand","",""],[5,"srand","",""],[0,"string","libc::funcs::c95",""],[5,"strcpy","libc::funcs::c95::string",""],[5,"strncpy","",""],[5,"strcat","",""],[5,"strncat","",""],[5,"strcmp","",""],[5,"strncmp","",""],[5,"strcoll","",""],[5,"strchr","",""],[5,"strrchr","",""],[5,"strspn","",""],[5,"strcspn","",""],[5,"strpbrk","",""],[5,"strstr","",""],[5,"strlen","",""],[5,"strerror","",""],[5,"strtok","",""],[5,"strxfrm","",""],[5,"wcslen","",""],[5,"memcmp","",""],[5,"memchr","",""],[0,"posix88","libc::funcs",""],[0,"stat_","libc::funcs::posix88",""],[5,"chmod","libc::funcs::posix88::stat_",""],[5,"fchmod","",""],[5,"fstat","",""],[5,"mkdir","",""],[5,"mkfifo","",""],[5,"stat","",""],[0,"stdio","libc::funcs::posix88",""],[5,"popen","libc::funcs::posix88::stdio",""],[5,"pclose","",""],[5,"fdopen","",""],[5,"fileno","",""],[0,"fcntl","libc::funcs::posix88",""],[5,"open","libc::funcs::posix88::fcntl",""],[5,"creat","",""],[5,"fcntl","",""],[0,"dirent","libc::funcs::posix88",""],[5,"opendir","libc::funcs::posix88::dirent",""],[5,"readdir_r","",""],[5,"closedir","",""],[5,"rewinddir","",""],[5,"seekdir","",""],[5,"telldir","",""],[0,"unistd","libc::funcs::posix88",""],[5,"access","libc::funcs::posix88::unistd",""],[5,"alarm","",""],[5,"chdir","",""],[5,"chown","",""],[5,"close","",""],[5,"dup","",""],[5,"dup2","",""],[5,"execv","",""],[5,"execve","",""],[5,"execvp","",""],[5,"fork","",""],[5,"fpathconf","",""],[5,"getcwd","",""],[5,"getegid","",""],[5,"geteuid","",""],[5,"getgid","",""],[5,"getgroups","",""],[5,"getlogin","",""],[5,"getopt","",""],[5,"getpgrp","",""],[5,"getpid","",""],[5,"getppid","",""],[5,"getuid","",""],[5,"getsid","",""],[5,"isatty","",""],[5,"link","",""],[5,"lseek","",""],[5,"pathconf","",""],[5,"pause","",""],[5,"pipe","",""],[5,"read","",""],[5,"rmdir","",""],[5,"setgid","",""],[5,"setpgid","",""],[5,"setsid","",""],[5,"setuid","",""],[5,"sleep","",""],[5,"usleep","",""],[5,"nanosleep","",""],[5,"sysconf","",""],[5,"tcgetpgrp","",""],[5,"ttyname","",""],[5,"unlink","",""],[5,"write","",""],[5,"pread","",""],[5,"pwrite","",""],[5,"utime","",""],[17,"_PC_NAME_MAX","",""],[0,"signal","libc::funcs::posix88",""],[5,"kill","libc::funcs::posix88::signal",""],[0,"mman","libc::funcs::posix88",""],[5,"mlock","libc::funcs::posix88::mman",""],[5,"munlock","",""],[5,"mlockall","",""],[5,"munlockall","",""],[5,"mmap","",""],[5,"munmap","",""],[5,"mprotect","",""],[5,"msync","",""],[5,"shm_open","",""],[5,"shm_unlink","",""],[0,"net","libc::funcs::posix88",""],[5,"if_nametoindex","libc::funcs::posix88::net",""],[0,"posix01","libc::funcs",""],[0,"stat_","libc::funcs::posix01",""],[5,"lstat","libc::funcs::posix01::stat_",""],[0,"unistd","libc::funcs::posix01",""],[5,"readlink","libc::funcs::posix01::unistd",""],[5,"fsync","",""],[5,"fdatasync","",""],[5,"setenv","",""],[5,"unsetenv","",""],[5,"putenv","",""],[5,"symlink","",""],[5,"ftruncate","",""],[0,"signal","libc::funcs::posix01",""],[5,"signal","libc::funcs::posix01::signal",""],[0,"glob","libc::funcs::posix01",""],[5,"glob","libc::funcs::posix01::glob",""],[5,"globfree","",""],[0,"mman","libc::funcs::posix01",""],[5,"posix_madvise","libc::funcs::posix01::mman",""],[0,"bsd43","libc::funcs",""],[5,"socket","libc::funcs::bsd43",""],[5,"connect","",""],[5,"bind","",""],[5,"listen","",""],[5,"accept","",""],[5,"getpeername","",""],[5,"getsockname","",""],[5,"setsockopt","",""],[5,"recv","",""],[5,"send","",""],[5,"recvfrom","",""],[5,"sendto","",""],[5,"getifaddrs","",""],[5,"freeifaddrs","",""],[5,"shutdown","",""],[0,"bsd44","libc::funcs",""],[5,"getdtablesize","libc::funcs::bsd44",""],[5,"ioctl","",""],[5,"madvise","",""],[5,"mincore","",""]],"paths":[[4,"c_void"],[3,"glob_t"],[3,"timeval"],[3,"timespec"],[3,"sockaddr"],[3,"sockaddr_storage"],[3,"sockaddr_in"],[3,"in_addr"],[3,"sockaddr_in6"],[3,"in6_addr"],[3,"ip_mreq"],[3,"ip6_mreq"],[3,"addrinfo"],[3,"sockaddr_un"],[3,"ifaddrs"],[3,"stat"],[3,"utimbuf"],[3,"pthread_attr_t"],[3,"sockaddr_ll"]]};

searchIndex['khronos_api'] = {"items":[[0,"","khronos_api","This crates contains the sources of the official OpenGL repository."],[7,"GL_XML","","Content of the official `gl.xml` file."],[7,"EGL_XML","","Content of the official `egl.xml` file."],[7,"WGL_XML","","Content of the official `wgl.xml` file."],[7,"GLX_XML","","Content of the official `glx.xml` file."]],"paths":[]};

searchIndex['bitflags'] = {"items":[[0,"","bitflags","A typesafe bitmask flag generator."],[14,"bitflags!","","The `bitflags!` macro generates a `struct` that holds a set of C-style\nbitmask flags. It is useful for creating typesafe wrappers for C APIs."]],"paths":[]};

initSearch(searchIndex);
